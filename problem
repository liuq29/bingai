Map<String, AutomaticByPolicy> policyMap = new HashMap<>(); // 用于存储唯一的co和policyNum组合以及对应的AutomaticByPolicy对象

automaticNoticeList.forEach(a -> {
    a.getPolicyList().forEach(p -> {
        // 构造一个键，以表示唯一的co和policyNum组合
        String key = p.getCo() + "-" + p.getPolicyNum();
        
        // 检查这个组合是否已经处理过
        AutomaticByPolicy policy = policyMap.get(key);
        if (policy == null) {
            // 如果没有，创建新的AutomaticByPolicy和Customer对象，并加入到map中
            policy = packAutomaticByPolicy(p, a);
            policyMap.put(key, policy);
        }
        
        // 现在，无论是新的还是已存在的组合，都添加新的Customer到policy对象中
        AutomaticByPolicy.Customer customer = new AutomaticByPolicy.Customer();
        customer.setPayeeId(a.getAlphaId());
        customer.setPayeeName(a.getCustomerName());
        policy.getCustomerSet().add(customer);
    });
});

// 最后，从map中提取所有的AutomaticByPolicy对象
List<AutomaticByPolicy> automaticByPolicyList = new ArrayList<>(policyMap.values());
